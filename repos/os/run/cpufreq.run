assert_spec foc
assert_spec arndale

#
# Build
#

# generic components
set build_components {
	core
	init
	drivers/platform
	drivers/timer
	test/affinity
	test/cpufreq
}

build $build_components
create_boot_directory


#
# Config
#

set config  {
	<config>
		<parent-provides>
			<service name="ROM"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="PD"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="LOG"/>
		</parent-provides>
		<default-route>
			<any-service> <any-child/> <parent/> </any-service>
		</default-route>

		<start name="platform_drv">
			<resource name="RAM" quantum="1M"/>
			<provides><service name="Regulator"/></provides>
		</start>
		<start name="timer">
			<resource name="RAM" quantum="1M"/>
			<provides><service name="Timer"/></provides>
		</start>
		<start name="test-affinity">
			<resource name="RAM" quantum="10M"/>
		</start>
		<start name="test-cpufreq">
			<resource name="RAM" quantum="10M"/>
		</start>
	</config>
}

install_config $config


#
# Boot modules
#

# generic modules
set boot_modules {
	core ld.lib.so init
	platform_drv
	timer
	test-affinity
	test-cpufreq
}

build_boot_image $boot_modules
run_genode_until {.*Round 04:  A  A.*\n.*Setting CPU frequency low.*\n.*Setting CPU frequency high.*\n.*Round 05:  A  A} 60

grep_output {^\[init -> test-cpufreq\] }

compare_output_to {
[init -> test-cpufreq] Setting CPU frequency low
[init -> test-cpufreq] Setting CPU frequency high
}
