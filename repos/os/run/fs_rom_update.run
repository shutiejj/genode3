if {[have_spec arm]} {
   assert_spec arm_v7
}

#
# Build
#
set build_components {
	core init
	app/rom_logger
	app/rom_to_file
	drivers/timer
	server/dynamic_rom
	server/fs_rom
	server/ram_fs
}

build $build_components

create_boot_directory

#
# Generate config
#
append config {
<config>
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<default caps="100"/>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="ram_fs">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="File_system"/></provides>
		<config>
			<policy label_prefix="rom_to_file" root="/" writeable="yes"/>
			<policy label_prefix="fs_rom" root="/" writeable="no"/>
		</config>
	</start>
	<start name="dynamic_rom">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="ROM"/></provides>
		<config verbose="yes">
			<rom name="dynamic_rom">
				<inline description="iteration 1">
					<config iteration="1" />
				</inline>
				<sleep milliseconds="2000" />
				<inline description="iteration 2">
					<config iteration="2" />
				</inline>
				<sleep milliseconds="2000" />
				<inline description="iteration 3">
					<config iteration="3" />
				</inline>
				<sleep milliseconds="2000" />
				<inline description="iteration 4">
					<config iteration="4" />
				</inline>
				<sleep milliseconds="2000" />
			</rom>
		</config>
	</start>
	<start name="rom_to_file">
		<resource name="RAM" quantum="2M"/>
		<config rom="dynamic_rom"/>
		<route>
			<service name="ROM" label="dynamic_rom"> <child name="dynamic_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>
	<start name="fs_rom">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="ROM"/></provides>
	</start>
	<start name="rom_logger">
		<resource name="RAM" quantum="1M"/>
		<config rom="dynamic_rom"/>
		<route>
			<service name="ROM" label="dynamic_rom"> <child name="fs_rom"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core ld.lib.so init
	dynamic_rom
	fs_rom
	ram_fs
	rom_logger
	rom_to_file
	timer
}

build_boot_image $boot_modules

append qemu_args " -nographic "

run_genode_until forever
